events {
    worker_connections 1024;
}

http {
    upstream image_service {
        server image-resize:3000;
    }

    # Cache configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=images:10m max_size=1g inactive=7d use_temp_path=off;

    server {
        listen 80;
        
        # Enable gzip compression
        gzip on;
        gzip_types image/jpeg image/png image/webp image/avif;
        gzip_min_length 1000;

        location /health {
            proxy_pass http://image_service;
            proxy_cache off;
        }

        location /presets {
            proxy_pass http://image_service;
            proxy_cache off;
        }

        location / {
            proxy_pass http://image_service;
            
            # Cache successful image responses
            proxy_cache images;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # Add cache status headers
            add_header X-Cache-Status $upstream_cache_status;
            
            # Set timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Forward headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
